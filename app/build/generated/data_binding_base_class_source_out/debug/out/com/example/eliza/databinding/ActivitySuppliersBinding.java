// Generated by view binder compiler. Do not edit!
package com.example.eliza.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eliza.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySuppliersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageLogo;

  @NonNull
  public final RecyclerView recyclerViewSuppliers;

  @NonNull
  public final TextView textViewSuppliersListTitle;

  private ActivitySuppliersBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageLogo,
      @NonNull RecyclerView recyclerViewSuppliers, @NonNull TextView textViewSuppliersListTitle) {
    this.rootView = rootView;
    this.imageLogo = imageLogo;
    this.recyclerViewSuppliers = recyclerViewSuppliers;
    this.textViewSuppliersListTitle = textViewSuppliersListTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySuppliersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySuppliersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_suppliers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySuppliersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageLogo;
      ImageView imageLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageLogo == null) {
        break missingId;
      }

      id = R.id.recyclerViewSuppliers;
      RecyclerView recyclerViewSuppliers = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSuppliers == null) {
        break missingId;
      }

      id = R.id.textViewSuppliersListTitle;
      TextView textViewSuppliersListTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSuppliersListTitle == null) {
        break missingId;
      }

      return new ActivitySuppliersBinding((ConstraintLayout) rootView, imageLogo,
          recyclerViewSuppliers, textViewSuppliersListTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
